<!--updateEmployee.ejs -->
<!DOCTYPE html>
<html>
<head>
    <title>Update Employee</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.cdnfonts.com/css/eras-md-bt" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css" />
    <style>
        /* Width of the scrollbar */
        ::-webkit-scrollbar {
        width: 12px;
        }
    
        /* Handle (the draggable part) */
        ::-webkit-scrollbar-thumb {
        background: #198754; /* Color of the scrollbar handle */
        border-bottom-right-radius: 6px; /* Rounded corners for the handle */
        border-top-right-radius: 5px; /* Rounded corners for the handle */
        }
    
        /* Handle on hover */
        ::-webkit-scrollbar-thumb:hover {
        background: #dc3545; /* Color of the scrollbar handle on hover */
        }
    </style>
</head>
<body style="background-color: #c3c3c3;">
    <div style="display: flex; align-items: center; height: 60px; background-color: black; padding: 0 20px; position: relative;">
        <div style="display: flex; align-items: center; height: 100%;">
            <img src="/img/CVWMCC.png" alt="" style="height: 50px; width: 50px; margin-right: 10px">
            <h2 class="m-0" style="font-family: 'Eras Md BT', sans-serif; font-weight: bold; color: #ffbf00;;">
                Central Visayas Waste Management Complex Corporation
            </h2>
        </div>
        <div class="header_date_time" style="position: absolute; right: 500px; color: white; display: flex; align-items: center; gap: 20px; font-size: 20px;">
            <div id="safety_man_hour"></div>
        </div>
        <div class="header_date_time" style="position: absolute; right: 20px; color: white; display: flex; align-items: center; gap: 20px;">
            <div class="header_date">
                <div id="exactDate"></div>
            </div>
            <div class="header_time" style="font-size: 40px;">
                <div id="exactTime"></div>
            </div>
        </div>
    </div>
    <div>
        <a href="/home" style="text-decoration: none; position: absolute; margin: 10px;">
            <button type="button" class="form-control bg-danger text-white" style="max-width: fit-content !important;">
                Back
            </button>
        </a>
        <!-- <a href="/searchEmployee" style="text-decoration: none; position: absolute; margin: 10px 0 0 70px;">
            <button type="button" class="form-control bg-success text-white" style="max-width: fit-content !important;">
                Search
            </button>
        </a> -->
    </div>
    <div style="height: 100vh; display: flex; justify-content: center; margin-top: 20px;">
        <div style="width: 1000px;">
            <h2>Employee Data</h2>
            <form id="form_input" action="/updateEmployee" method="POST" enctype="multipart/form-data" class="form-control" style="display: grid; grid-template-columns: 1fr 1fr 1fr; grid-column-gap: 20px; background-color: transparent; border: none;">        
                <div>
                    <label for="employee_id">Employee ID:</label>
                    <input type="text" id="employee_id" name="employee_id" class="form-control" readonly required autocomplete="off" value="<%= employeeData.employee_id %>"><br>
                </div>
                <div>
                    <label for="type_of_employee">Expiry Date:</label>
                    <select name="type_of_employee" id="type_of_employee" class="form-control" required autocomplete="off"><br>
                        <option value="">SELECT</option>
                        <option value="REGULAR" <%= employeeData.type_of_employee === 'REGULAR' ? 'selected' : '' %>>REGULAR</option>
                        <option value="PROJECT BASED" <%= employeeData.type_of_employee === 'PROJECT BASED' ? 'selected' : '' %>>PROJECT BASED</option>
                        <option value="TEMPORARY" <%= employeeData.type_of_employee === 'TEMPORARY' ? 'selected' : '' %>>TEMPORARY</option>
                    </select>
                </div>
                <div>
                    <div id="date_expire_container" style="display: none;">
                        <label for="date_expire">Expiry Date:</label>
                        <input type="date" id="date_expire" name="date_expire" class="form-control" autocomplete="off" value="<%= formatted_date_expire %>"><br>
                    </div>
                </div>
                <h5>Personal Information</h5><div></div><div></div>
                <div>
                    <label for="first_name">First Name:</label>
                    <input type="text" id="first_name" name="first_name" class="form-control" required autocomplete="off" value="<%= employeeData.first_name %>"><br>
                </div>
                <div>
                    <label for="middle_name">Middle Name:</label>
                    <input type="text" id="middle_name" name="middle_name" class="form-control" autocomplete="off" value="<%= employeeData.middle_name %>"><br>
                </div>
                <div>
                    <label for="last_name">Last Name:</label>
                    <input type="text" id="last_name" name="last_name" class="form-control" required autocomplete="off" value="<%= employeeData.last_name %>"><br>
                </div>
                <div>
                    <label for="affix">Affix: (Ex. JR. SR.) Leave Blank if none</label>
                    <input type="text" id="affix" name="affix" class="form-control" autocomplete="off"><br>
                </div>
                <div>
                    <label for="birthday">Birthday:</label>
                    <input type="date" id="birthday" name="birthday" class="form-control" required autocomplete="off" value="<%= formattedBirthday %>"><br>
                </div>
                <div>
                    <label for="contact_number">Contact Number:</label>
                    <input type="text" id="contact_number" name="contact_number" class="form-control" required autocomplete="off" value="<%= employeeData.contact_number %>"><br>
                </div>
                <div>
                    <label for="designation">Designation:</label>
                    <input type="text" id="designation" name="designation" class="form-control" required autocomplete="off" value="<%= employeeData.designation %>"><br>
                </div>
                <div>
                    <label for="address">House #/Street/Subdivision/Barangay:</label>
                    <input type="text" id="address" name="address" class="form-control" required autocomplete="off" value="<%= employeeData.address %>"><br>
                </div>
                <div>
                    <label for="address">City/Municipality/Province:</label>
                    <input type="text" id="address2" name="address2" class="form-control" required autocomplete="off" value="<%= employeeData.address2 %>"><br>
                </div>
                <div>
                    <label for="sss_no">SSS #:</label>
                    <input type="text" id="sss_no" name="sss_no" class="form-control" autocomplete="off" value="<%= employeeData.sss_no %>"><br>
                </div>
                <div>
                    <label for="pag_ibig_no">Pag-ibig #:</label>
                    <input type="text" id="pag_ibig_no" name="pag_ibig_no" class="form-control" autocomplete="off" value="<%= employeeData.pag_ibig_no %>"><br>
                </div>
                <div>
                    <label for="philhealth_no">Philhealth #:</label>
                    <input type="text" id="philhealth_no" name="philhealth_no" class="form-control" autocomplete="off" value="<%= employeeData.philhealth_no %>"><br>
                </div>
                <div>
                    <label for="tin_no">Tin #:</label>
                    <input type="text" id="tin_no" name="tin_no" class="form-control" autocomplete="off" value="<%= employeeData.tin_no %>"><br>
                </div>
                <div>
                    <label for="picture">Picture:</label>
                    <input type="file" id="picture" name="picture" class="form-control" required autocomplete="off" value="<%= employeeData.picture %>"><br>
                </div>
                <div>
                    <label for="signature">Signature:</label>
                    <input type="file" id="signature" name="signature" class="form-control" required autocomplete="off" value="<%= employeeData.signature %>"><br>
                </div>
                <h5>In Case of Emergency</h5><div></div><div></div>
                <div>
                    <label for="contact_person">Contact Person:</label>
                    <input type="text" id="contact_person" name="contact_person" class="form-control" required autocomplete="off" value="<%= employeeData.contact_person %>"><br>
                </div>
                <div>
                    <label for="contact_person_number">Contact Number:</label>
                    <input type="text" id="contact_person_number" name="contact_person_number" class="form-control" autocomplete="off" value="<%= employeeData.contact_person_number %>"><br>
                </div><div></div>
                <div>
                    <label for="address">House #/Street/Subdivision/Barangay:</label>
                    <input type="text" id="contact_person_address" name="contact_person_address" class="form-control" required autocomplete="off" value="<%= employeeData.contact_person_address %>"><br>
                </div>
                <div>
                    <label for="address">City/Municipality/Province:</label>
                    <input type="text" id="contact_person_address2" name="contact_person_address2" class="form-control" required autocomplete="off" value="<%= employeeData.contact_person_address2 %>"><br>
                </div><div></div><div></div>
                <button type="submit"  class="form-control bg-dark text-warning">
                    Update Record
                </button>
            </form>
        </div>
    </div>

    <script>
        function generateExactTime() {
        var now = new Date();
        var hours = now.getHours();
        var minutes = now.getMinutes();
        var seconds = now.getSeconds();
        var ampm = hours >= 12 ? "PM" : "AM";

        // Convert hours to 12-hour format
        hours = hours % 12;
        hours = hours ? hours : 12; // If hours is 0, set it to 12

        // Format the time to ensure leading zeros for single-digit values
        hours = hours < 10 ? "0" + hours : hours;
        minutes = minutes < 10 ? "0" + minutes : minutes;
        seconds = seconds < 10 ? "0" + seconds : seconds;

        var exactTime = hours + ":" + minutes + ":" + seconds + " " + ampm;
        return exactTime;
        }

        // Update the content of the HTML element with the exact time every second
        function updateExactTime() {
            var exactTimeElement = document.getElementById("exactTime");
            exactTimeElement.textContent = generateExactTime();
        }

        // Call the updateExactTime function every second
        setInterval(updateExactTime, 1000);

        function generateFormattedDate() {
        var now = new Date();
        
        // Define the month names
        var monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

        // Get the date components
        var month = monthNames[now.getMonth()];
        var day = now.getDate();
        var year = now.getFullYear();

        // Define the day names
        var dayNames = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
        
        // Get the day of the week
        var dayOfWeek = dayNames[now.getDay()];

        // Format the date
        var formattedDate = month.toUpperCase() + " " + day + ", " + year + "<br>" + dayOfWeek.toUpperCase();

        return formattedDate;
        }

        function updateDate() {
        var dateElement = document.getElementById("exactDate");
        dateElement.innerHTML = generateFormattedDate();
        }

        // Update the date every second (1000 milliseconds)
        setInterval(updateDate, 1000);
        
        // Function to update the safety man-hours data on the page
        function updateSafetyManHours(data) {
            const container = document.getElementById('safety_man_hour');
            container.innerHTML = `Updated Safety Man-Hours:  ${data}`;
        }

        // Function to fetch safety man-hours data from the server
        function fetchSafetyManHours() {
            fetch('/safetymanhours')
                .then(response => response.json())
                .then(data => {
                    updateSafetyManHours(formatDuration(data));
                })
                .catch(error => {
                    console.error('Error fetching safety man-hours:', error);
                });
        }

        function formatDuration(seconds) {
            const hours = Math.floor(seconds / 3600); // Convert seconds to hours
            const remainingMinutes = Math.floor((seconds % 3600) / 60);
            const remainingSeconds = Math.floor(seconds % 60);

            const parts = [];

            if (hours > 0) {
                parts.push(`${hours} hour${hours > 1 ? 's' : ''}`);
            }

            if (remainingMinutes > 0) {
                parts.push(`${remainingMinutes} minute${remainingMinutes > 1 ? 's' : ''}`);
            }

            if (remainingSeconds > 0) {
                parts.push(`${remainingSeconds} second${remainingSeconds > 1 ? 's' : ''}`);
            }

            if (parts.length === 0) {
                return '0 seconds';
            }

            return parts.join(', ');
        }

        // Fetch safety man-hours data initially and then at 1-second intervals
        fetchSafetyManHours();
        setInterval(fetchSafetyManHours, 1000);

        // Get the form element by its ID
        const form = document.getElementById('form_input');

        // Add a submit event listener to the form
        form.addEventListener('submit', function (event) {
        event.preventDefault(); // Prevent the default form submission

        // Loop through all text input elements in the form
        const inputs = form.querySelectorAll('input[type="text"]');
        inputs.forEach(function (input) {
            input.value = input.value.toUpperCase(); // Convert input value to uppercase
        });

        // Now, you can submit the form programmatically
        form.submit();
        });

        // function searchEmployee() {
        //     const employeeId = document.getElementById('employee_id').value;
        //     window.location.href = `/searchEmployee?employee_id=${employeeId}`;
        // }
        const type_of_employee = document.getElementById("type_of_employee");
        const date_expire_container = document.getElementById("date_expire_container");

        // Function to update the display of date_expire_container
        function updateDateExpireContainer() {
            if (type_of_employee.value === "REGULAR") {
                date_expire_container.style.display = "none";
            } else if (type_of_employee.value === "PROJECT BASED" || type_of_employee.value === "TEMPORARY") {
                date_expire_container.style.display = "block";
            } else {
                date_expire_container.style.display = "none";
            }
        }

        // Add the event listener to type_of_employee
        type_of_employee.addEventListener("change", updateDateExpireContainer);

        // Initial state when the page loads
        updateDateExpireContainer();
    </script>
    <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.3.2/dist/html2canvas.min.js"></script>
</body>
</html>
